buildscript {
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.0.2'
	}
}

apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'maven'
apply plugin: 'org.unbroken-dome.test-sets'

repositories {
	mavenCentral()
	jcenter()
	maven { url "http://oss.sonatype.org/content/repositories/releases/" }
	maven {
		url "http://nexus.opendaylight.org/content/repositories/opendaylight.snapshot"
	}
	maven {
		url "http://nexus.opendaylight.org/content/repositories/opendaylight.release"
	}
}

dependencies {
  compile ("org.codehaus.groovy:groovy-all:2.4.7") {
    exclude module: "commons-io"
	}
	compile "org.opendaylight.yangtools:yang-parser-impl:1.0.0-SNAPSHOT"
	compile "org.opendaylight.yangtools:binding-java-api-generator:0.7.5-SNAPSHOT"
	compile "org.opendaylight.yangtools:binding-generator-api:0.7.5-SNAPSHOT"
	compile "org.opendaylight.yangtools:binding-generator-impl:0.7.5-SNAPSHOT"
	compile "org.opendaylight.controller:yang-jmx-generator:0.5.0-SNAPSHOT"
	compile "commons-io:commons-io:2.4"
	compile "org.xeustechnologies:jcl-core:2.6"
	
	testCompile("org.spockframework:spock-core:1.0-groovy-2.3") {
		exclude group: "org.codehaus.groovy"
	}
}

sourceCompatibility = 1.7

group	= 'com.att.opnfv.yang'
version	= '1.0.0-SNAPSHOT'

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
    }
}

testSets {
	integTest
}

sourceSets {
	main {
		compileClasspath = configurations.compile.minus files("$gradle.gradleHomeDir/lib/commons-io-1.4.jar")
    }
 	integTest {
		runtimeClasspath = output + compileClasspath - files("$gradle.gradleHomeDir/lib/commons-io-1.4.jar")
	}
}

dependencies {
	testCompile( 'com.netflix.nebula:nebula-test:2.2.1' ) {
		exclude module: 'groovy-all'
	}
}

project.integTest {
	// This forces integration tests to always run if the task is run.
	outputs.upToDateWhen { false }
}

// Makes integration tests not run by default.
check.dependsOn -= integTest
